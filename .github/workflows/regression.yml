# Copyright 2022 GlobalFoundries PDK Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: regression testing

# Prevent keeping resources busy when a branch/PR is updated
# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build_drc-matrix:
    runs-on: ubuntu-latest
    outputs:
      drc_table: ${{ steps.set-matrix.outputs.drc_table }}
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: |
          cd klayout/drc/testing
          drc_table=`echo '[' ; find testcases/unit/ -iname '*.gds' | tr '\n' ','|sed -e 's/^/\"/'|sed -e 's/,$/\"]/'|sed -e 's/,/\", \"/g'`
          drc_table="${drc_table//'testcases/unit/'/}"; drc_table="${drc_table//'"", '/}"; drc_table="${drc_table//'.gds'/}";
          drc_table=`echo $drc_table | jq -c .`
          echo $drc_table
          echo "drc_table=$drc_table" >>$GITHUB_OUTPUT

  drc_regression:
    needs: build_drc-matrix
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        part: [drc]
        test: ${{ fromJson(needs.build_drc-matrix.outputs.drc_table) }}

    name: ${{ matrix.part }} | ${{ matrix.test }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Testing ${{ matrix.part }} for ${{ matrix.test }}
        run: |
          make test-"$(python -c 'print("${{ matrix.part }}".upper())')"-${{ matrix.test }}

  drc_switch:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        include:
          - { tool: klayout, part: drc, test: switch }

    name: ${{ matrix.part }} | ${{ matrix.test }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Testing ${{ matrix.part }} for ${{ matrix.test }}
        run: |
          make test-"$(python -c 'print("${{ matrix.part }}".upper())')"-${{ matrix.test }}

  lvs_regression:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        include:
          - { tool: klayout, part: lvs, test: main }
          - { tool: klayout, part: lvs, test: switch }

    name: ${{ matrix.part }} | ${{ matrix.test }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Testing ${{ matrix.part }} for ${{ matrix.test }}
        run: |
          make test-"$(python -c 'print("${{ matrix.part }}".upper())')"-${{ matrix.test }}
